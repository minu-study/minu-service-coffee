
plugins {
    id "org.asciidoctor.jvm.convert" version "3.3.2"
}

configurations {
    asciidoctorExt
}

dependencies {

    implementation project(':minu-domain-coffee')
    implementation project(':minu-core-coffee')

    implementation 'org.junit.jupiter:junit-jupiter:5.12.2'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2:3.5.0'

    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'

    asciidoctorExt "org.springframework.restdocs:spring-restdocs-asciidoctor:3.0.0"
    testImplementation "org.springframework.restdocs:spring-restdocs-mockmvc:3.0.3"

    testImplementation('org.springframework.boot:spring-boot-starter-test:3.5.0') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        exclude group: 'ch.qos.logback'
    }
    testImplementation 'org.springframework.security:spring-security-test:6.4.5'


}

ext {
    snippetsDir = file("build/generated-snippets")
}


test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor.doFirst {
    delete file("src/main/resources/static/docs")
}

asciidoctor {
    inputs.dir snippetsDir
    configurations 'asciidoctorExt'
    dependsOn test
}

jar {
    enabled = false
}

bootJar {
    from("${asciidoctor.outputDir}") {
        into 'static/docs'
    }
    dependsOn asciidoctor
}


task copyDocument(type: Copy) {
    dependsOn asciidoctor
    from file("$buildDir/docs/asciidoc")
    into file("src/main/resources/static/docs")
}


build {
    dependsOn copyDocument
}